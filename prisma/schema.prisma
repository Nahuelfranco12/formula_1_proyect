// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
	provider = "prisma-client-js"
}

datasource db {
	provider = "postgresql"
	url      = env("DATABASE_URL")
}

model piloto{
	id_piloto Int @id @default(autoincrement())
	nombre_piloto String
	nacionalidad_piloto String
	edad_piloto Int
	puntos_piloto Int
	posicion_piloto Int
	id_escuderia Int
	escuderia escuderia @relation(fields: [id_escuderia], references: [id_escuderia])
  carreras carrera[]
}

model escuderia{
	id_escuderia Int @id @default(autoincrement())
	nombre_escuderia String
	puntos_escuderia Int
	pais_escuderia String
	anio_creacion_escuderia Int
	posicion_escuderia Int
	pilotos piloto[]
}

        // <h2 class="subtitle">id</h2>
        // <h2 class="subtitle">Nombre Carrera</h2>
        // <h2 class="subtitle">Primer Puesto</h2>
        // <h2 class="subtitle">Segundo puesto</h2>
        // <h2 class="subtitle">tercer Puesto</h2>
        // <h2 class="subtitle">circuito asociado</h2>

model carrera{
  id_carrera Int @id @default(autoincrement())
  nombre_carrera String
  pais_sede String
  anio Int
  id_primer_puesto Int
  id_circuito_asociado Int
  piloto piloto @relation(fields: [id_primer_puesto], references: [id_piloto])
  circuito circuito @relation(fields: [id_circuito_asociado], references: [id_circuito])
}

model circuito{
  id_circuito Int @id @default(autoincrement())
  carreras carrera[]
  nombre String
  tipo String
  longitud_total Int
  cantidad_curvas Int
}